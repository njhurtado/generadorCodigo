import "../utils.eol";

pre {
var packete=Sql!Aplication.all.at(0).package;
var sufijoPkg=Sql!Aplication.all.at(0).sufijoPkg;
var nomPkg="";
	if(""<>sufijoPkg and null<>sufijoPkg){
		nomPkg='.'+sufijoPkg;
	}
//var tos
}
rule Aplicacion2Modulo 
	transform a : Sql!Aplication
	to m : Arq!Modulo {
		m.nombre=a.name;
	}
	
rule Columna2Atributo 
	transform c : Sql!Column
	to a : Arq!Atributo {
		a.nombre=c.name;
		a.tipo=c.type.toString();
		a.anotaciones=c.annotations.equivalent();
		a.isObligatorio=c.isNotNull;
		a.longitud=c.size;
		a.precision=c.presicion;
		var tabla=c.eContainer();
		if(tabla.foreignkeys.size()>0 and 
		tabla.foreignkeys.select(f|f.annotations.size()>0 and f.localColumns.select(c1|c1=c).size()>0).size()>0
		){
		 var fk=tabla.foreignkeys.select(f|f.annotations.size()>0 and f.localColumns.select(c1|c1=c).size()>0);
		var anotacion=new Arq!ModoCombo;
		
		anotacion.args=fk.first().foreignTable.name;
		a.anotaciones.add(anotacion);		
		}
		
	}
	
@abstract
rule Table2Clase 
	transform t : Sql!Table
	to c : Arq!Clase {
		c.nombre=t.name;
		c.paquete=packete;
		c.sufijoPkg=sufijoPkg;
		c.anotaciones=t.annotations.equivalent();
		var tableDet=t.annotations.select(an|an.isTypeOf(Sql!TableDetail)).first();
		if(tableDet.isDefined()) {
			var nombreClase=tableDet.nombreClase;
			c.nombreClase=nombreClase;
			//c.nombreClase.println(c.nombre+"-->");
			if(c.nombreClase = null or c.nombreClase = "") {
				c.nombreClase = c.nombre.firstToUpperCamelCaseClase();
			}
		} else {
			c.nombreClase = c.nombre.firstToUpperCamelCaseClase();
		}
		
	}	
	
//Maping Tabla a Clase
rule Tabla2ClaseTo 
	transform t : Sql!Table 
	to _to : Arq!`To` ,  pkTo : Arq!PkTo, attTo : Arq!AttTo {
		_to.paquete=packete+'.general.to'+nomPkg;
		_to.nombre=t.name;		
		_to.sufijoPkg=sufijoPkg;
		_to.anotaciones=t.annotations.equivalent();
		var tableDet=t.annotations.select(an|an.isTypeOf(Sql!TableDetail)).first();
		if(tableDet.isDefined()) {
			var nombreClase=tableDet.nombreClase;
			_to.nombreClase=nombreClase;
			//c.nombreClase.println(c.nombre+"-->");
			if(_to.nombreClase = null or _to.nombreClase = "") {
				_to.nombreClase = _to.nombre.firstToUpperCamelCaseClase();
			}
		} else {
			_to.nombreClase = _to.nombre.firstToUpperCamelCaseClase();
		}
		"crea el to ".println(_to.nombreClase);
		//Conformo Clase PkTo
		pkTo.nombre=t.name;		
		pkTo.atributos=t.primarykey.columns.equivalent();	
		pkTo.paquete=_to.paquete;
		pkTo.nombreClase=_to.nombreClase;
		//conformo Clase AttTo
		attTo.paquete=_to.paquete;
		attTo.nombre=t.name;
		attTo.nombreClase=_to.nombreClase;				
		attTo.atributos=t.columns.select(c|t.primarykey.columns.select(c1|c1=c).size()=0).equivalent();
		//Completo TO con pk y att
		_to.pk=pkTo;
		_to.att=attTo;
		
	}


rule Tabla2Servicio 
	transform t : Sql!Table 
	to srv : Arq!Servicio extends Table2Clase {			
	srv.paquete=packete+'.servicios'+nomPkg;	
	//Agregamos tos	
	var tos =Arq!`To`.allInstances().select(n | n.nombre = t.name).first();
	for(t in tos){	
		var to2=new Arq!`To`;
		to2.att=t.att;
		to2.pk=t.pk;
		to2.nombre=t.nombre;
		to2.paquete=t.paquete;
		to2.nombreClase = t.nombreClase;
		srv.detalle.add(to2);
	}
	
}	
rule Tabla2Accion 
	transform t : Sql!Table 
	to acc : Arq!Accion extends Table2Clase {	
		
	acc.paquete=packete+'.acciones'+nomPkg;
	//add servcios	
	acc.servicios=Arq!Servicio.allInstances().select(n | n.nombre = t.name);
	//Agregamos tos	
	var tos =Arq!`To`.allInstances().select(n | n.nombre = t.name).first();
	for(t in tos){	
		var to2=new Arq!`To`;
		to2.att=t.att;
		to2.pk=t.pk;
		to2.nombre=t.nombre;
		to2.paquete=t.paquete;
		to2.nombreClase = t.nombreClase;
		acc.detalle.add(to2);
	}
	
}

rule Tabla2Dao 
	transform t : Sql!Table 
	to dao : Arq!Dao extends Table2Clase {			
	dao.paquete=packete+'.dao'+nomPkg;	
	//Agregamos tos	
	var tos=Arq!`To`.allInstances().select(n | n.nombre = t.name).first();	
	
	for(t in tos){	
		var to2=new Arq!`To`;
		to2.att=t.att;
		to2.pk=t.pk;
		to2.nombre=t.nombre;
		to2.paquete=t.paquete;
		to2.nombreClase = t.nombreClase;
		dao.detalle.add(to2);
	}
}

rule Tabla2Wbo 
	transform t : Sql!Table 
	to w : Arq!Wbo extends Table2Clase {
	w.delegados = Arq!Delegado.allInstances().select(n | n.nombre = t.name)->first();
	w.paquete=packete+'.web.wbo'+nomPkg;	
	var tos=Arq!`To`.allInstances().select(n | n.nombre = t.name).first();	
	
	for(t in tos.asSet()){	
		var to2=new Arq!`To`;
		to2.att=t.att;
		to2.pk=t.pk;
		to2.nombre=t.nombre;
		to2.paquete=t.paquete;
		to2.nombreClase = t.nombreClase;
		w.tos.add(to2);
	}
}

rule Tabla2Xhtml
	transform t : Sql!Table 
	to xhtml : Arq!Xhtml extends Table2Clase {			
	xhtml.paquete=packete+'.webcontent';	
	//Agregamos tos	
	var tos=Arq!`To`.allInstances().select(n | n.nombre = t.name).first();	
	
	for(t in tos){	
		var to2=new Arq!`To`;
		to2.att=t.att;
		to2.pk=t.pk;
		to2.nombre=t.nombre;
		to2.paquete=t.paquete;
		to2.nombreClase = t.nombreClase;
		xhtml.detalle.add(to2);
	}
}

rule Aplicacion2Delegado 
	transform a : Sql!Aplication 
	to d : Arq!Delegado {
		d.nombre=a.name;
		d.paquete=a.package;		
		d.acciones.addAll(Arq!Accion.allInstances());
}


//anotaciones

@abstract
rule Annotation2Anotacion
transform a : Sql!Annotation
	to m : Arq!Anotacion {
		m.nombre=a.name;
		m.args=a.args;
	}
	
rule TableDetail2TablaDetalle
transform td : Sql!TableDetail
    to m : Arq!TablaDetalle extends Annotation2Anotacion {
		m.nombre=td.name;
		m.args=td.args;
		
		var tabla=td.eContainer();
		var to1=Arq!`To`.allInstances().select(n | n.nombre = tabla.name).first();	//
		
		var to2=new Arq!`To`;
		to2.att=to1.att;
		to2.pk=to1.pk;
		to2.nombre=to1.nombre;
		to2.paquete=to1.paquete;
		
		to2.nombreClase=to1.nombreClase;		
		
				
		m.clase=to2;
		
	}

rule ReferenceMode2ModoReferencia
transform a : Sql!ReferenceMode
    to m : Arq!ModoReferencia extends Annotation2Anotacion {
		m.nombre=a.name;
		m.args=a.args;
		m.refs=a.refs;
	}


rule ComboMode2ModoCombo
transform a : Sql!ComboMode
    to m : Arq!ModoCombo extends Annotation2Anotacion {
		m.nombre=a.name;
		m.args=a.args;
	}
	
rule Filtro2Filtro
transform a : Sql!Filtro
    to m : Arq!Filtro extends Annotation2Anotacion {
		m.nombre=a.name;
		m.args=a.args;
	}

	