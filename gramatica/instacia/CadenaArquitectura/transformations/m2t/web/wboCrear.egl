[% 
import "../../utils.eol";
var nombreWbo=wbo.nombre.firstToUpperCamelCase();
var atribs = Arq!AttTo.all.select(n | n.nombre = wbo.nombre).first();
var pkes = Arq!PkTo.all.select(n | n.nombre = wbo.nombre).first();
var to = Arq!To.all.select(n | n.nombre = wbo.nombre).first();
var accion = Arq!Accion.all.select(n | n.nombre = wbo.nombre).first();
var stringServicio=accion.paquete.replace('co.gov.dian.muisca.','').replace('acciones.','');
 

var lstAtts=atribs.atributos.select(a|a.isModoCombo());
var lstPks=pkes.atributos.select(a|a.isModoCombo());
%]
/**
 * Republica de Colombia
 * Copyright (c) 2004 Direcci√≥n de Impuestos y Aduanas Nacionales.
 * (DIAN - www.dian.gov.co).  Todos los Derechos reservados.
 *
 * $Header:$
 */
package [%= wbo.paquete %].[%=nombreModulo.toLowerCase()%].web.wbo;

import co.gov.dian.muisca.arquitectura.general.excepcion.DMuiscaAppException;
import co.gov.dian.muisca.arquitectura.general.excepcion.errores.tipos.DConfirmacionErrorInfo;
import co.gov.dian.muisca.arquitectura.general.excepcion.errores.tipos.DValidacionWebErrorInfo;
import co.gov.dian.muisca.arquitectura.general.excepcion.mensajes.enums.DMensajesGeneral;
import co.gov.dian.muisca.arquitectura.general.to.gdto.DGenericoDTO;


import co.gov.dian.muisca.[%=nombreModulo.toLowerCase()%].delegados.DCatalogoDelegados;
import co.gov.dian.muisca.[%=nombreModulo.toLowerCase()%].delegados.negocio.DDelegado[%=nombreModulo.firstToUpperCamelCase()%];

import [%=accion.paquete%].DCmdAccCrear[%=accion.nombre.firstToUpperCamelCase()%];

import javax.annotation.PostConstruct;
import javax.faces.model.SelectItem;
import java.util.ArrayList;
import java.util.List;
import org.apache.log4j.Logger;

public class DCrear[%=nombreWbo%]WBO extends  D[%=nombreModulo.firstToUpperCamelCase()%]BaseWBO {

	private static Logger logger = Logger.getLogger( D[%=nombreWbo%]WBO.class );
	//private DDelegado[%=nombreModulo.firstToUpperCamelCase()%] delegado[%=nombreModulo.firstToUpperCamelCase()%] ;
	DCmdAccCrear[%=nombreWbo%] accCrear[%=nombreWbo%];
	private D[%=nombreWbo%]TO to[%=nombreWbo%];
	  
	 
	 
	[%		
	 //SelectItem - atts
	for(lstAtt in lstAtts) 
	{	
			var tipo = lstAtt.tipo.toType();
			var nombre = lstAtt.nombre.firstToLowerCamelCase();
			if(nombre<>"nivLectura" and nombre<>"nivEscritura" and nombre<>"ideUuid"){		
	%]
	private List<SelectItem> [%=nombre%]List;		
	[%
	}	}	 
	 %]
	 
	 [%		
	 //SelectItem  - pks
	for(lstPk in lstPks) 
	{	
			var tipo = lstPk.tipo.toType();
			var nombre = lstPk.nombre.firstToLowerCamelCase();
			if(nombre<>"nivLectura" and nombre<>"nivEscritura" and nombre<>"ideUuid"){		
	%]
	private List<SelectItem> [%=nombre%]List;		
	[%
	}	}	 
	 %]
	  
    @PostConstruct
    public void init( ) {
   // delegado[%=nombreModulo.firstToUpperCamelCase()%]  = ( DDelegado[%=nombreModulo.firstToUpperCamelCase()%] )DCatalogoDelegados.DELEGADO_[%=nombreModulo.toUpperCase()%].getInstancia( this.getContextoSeguridad( ), this.getNombreCmdProtector( ), this.getPkSegmentoAplicacion( ) );
    //this.dto = new DGenericoDTO( "D[%=nombreModulo.firstToUpperCamelCase()%]DTO" )
    this.to[%=nombreWbo%] = new D[%=nombreWbo%]TO();
    }
    
    public D[%=nombreWbo%]WBO( ) {
        super( );
    }
    
    
    public void crear[%=nombreWbo%]( ) {

        logger.debug( "************  Crear [%=nombreWbo%] WBO ***********************" );
        try {
  			accCrear[%=nombreWbo%] = (DCmdAccCrear[%=nombreWbo%])getAccion("[%=stringServicio%].DCmdAccCrear[%=nombreWbo%]"); 
            accCrear[%=nombreWbo%].inicializar(this.to[%=nombreWbo%]);
             accCrear[%=nombreWbo%].ejecutar();
            

        }
        catch( DMuiscaAppException ex ) {

            this.verCardUsuario = Boolean.FALSE;
            //Se decide el manejo de la excepcion propagada
            //Manejo de mensajes de excepcion a nivel de JavaServerFaces
            this.notificarUsuarios( ex );
            this.notificarNoUsuarios( ex );
        }

    }
    
    
    
    
    
    [%		
	 //SelectItem - atts
	for(lstAtt in lstAtts) 
	{	
			var tipo = lstAtt.tipo.toType();
			var nombre = lstAtt.nombre.firstToLowerCamelCase();
			var nombreUpper =lstAtt.nombre.firstToUpperCamelCase();
			if(nombre<>"nivLectura" and nombre<>"nivEscritura" and nombre<>"ideUuid"){		
	%]
	
	/**
	 	* Devuelve el valor de [%=nombre%].
	 	* @return Un objeto List<SelectItem>
	 	*/
		public List<SelectItem> get[%=nombreUpper%]List (){
			return [%=nombre%]List;
		}
		/**
		 * Establece el valor de [%=nombre%]ist.
		 * @param [%=nombre%]List El nuevo valor de [%=nombre%]List
		 */
		public void set[%=nombreUpper%]List(List<SelectItem> [%=nombre%]List) {
			this.[%=nombre%]List = [%=nombre%]List;
		}
	
	
	
	[%
	}	}	 
	 %]
	 
	[%		
	 //SelectItem - lstPk
	for(lstPk in lstPks) 
	{	
			var tipo = lstPk.tipo.toType();
			var nombre = lstPk.nombre.firstToLowerCamelCase();
			var nombreUpper =lstPk.nombre.firstToUpperCamelCase();
			if(nombre<>"nivLectura" and nombre<>"nivEscritura" and nombre<>"ideUuid"){		
	%]
	
	/**
	 	* Devuelve el valor de [%=nombre%].
	 	* @return Un objeto List<SelectItem>
	 	*/
		public List<SelectItem> get[%=nombreUpper%]List (){
			return [%=nombre%]List;
		}
		/**
		 * Establece el valor de [%=nombre%]ist.
		 * @param [%=nombre%]List El nuevo valor de [%=nombre%]List
		 */
		public void set[%=nombreUpper%]List(List<SelectItem> [%=nombre%]List) {
			this.[%=nombre%]List = [%=nombre%]List;
		}
		
	
	[%
	}	}	 
	 %]
    /**
    *Retorna obejto D[%=nombreWbo%]TO
    **/
    public [%=nombreWbo%]TO get[%=nombreWbo%]TO(){
    return this.to[%=nombreWbo%];
    }
    
    
	
}